# apockernel must be first
KERN_SRCS = apockernelmain.cpp \
            apocconsole.cpp \
            apocconsolewindow.cpp \
            apocsimpledataallocator.cpp \
            apockernelconsole.cpp \
            apockernel.cpp \
            apockeyboard.cpp \
            apocdiskio.cpp \
            apocmemorymanager.cpp \
            apocprocess.cpp \
            apocsystem.cpp \
            apoctextgraphics.cpp \
            apoctextwindow.cpp \
            apocscrollingtextwindow.cpp \
            apocsimpleconsole.cpp \
            apocutil.cpp \
            apocfilesystem.cpp \
            apocunixfilesystem.cpp \
            apocwindow.cpp \
            apocwindowmanager.cpp \
            x86/apocx86.cpp \
            x86/apocidt.cpp \
            x86/apocpic.cpp \
            x86/apocpit.cpp \
            x86/apocint.S

KERN_SRCFILES = $(patsubst %, $(SRCDIR)/%, $(KERN_SRCS))
KERN_SRCNAMES = $(notdir $(basename $(KERN_SRCS)))
KERN_X86_32_OBJFILES := $(patsubst %, $(OBJDIR)/%-x86-32.o, $(KERN_SRCNAMES))
KERN_X86_64_OBJFILES := $(patsubst %, $(OBJDIR)/%-x86-64.o, $(KERN_SRCNAMES))

$(KERN_X86_32_OBJFILES): $(KERN_SRCFILES)
	@echo + cc $?
	$(foreach SRCFILE, $(KERN_SRCFILES), $(shell $(CC) $(X86_32_CCFLAGS) -o $(OBJDIR)/$(notdir $(basename $(SRCFILE)))-x86-32.o $(SRCFILE)))

$(KERN_X86_64_OBJFILES): $(KERN_SRCFILES)
	@echo + cc $?
	$(foreach SRCFILE, $(KERN_SRCFILES), $(shell $(CC) $(X86_64_CCFLAGS) -o $(OBJDIR)/$(notdir $(basename $(SRCFILE)))-x86-64.o $(SRCFILE)))

#$(OBJDIR)/kernel-x86-32: $(KERN_X86_32_OBJFILES)
#	@echo + ld $?
#	@$(LD) $(X86_32_LDFLAGS) -N -e KernelMain -Ttext 0x100000 -o $@.out $?
#	@echo + oc $@.out
#	@$(OC) -S -O binary $@.out $@

#$(OBJDIR)/kernel-x86-64: $(KERN_X86_64_OBJFILES)
#	@echo + ld $?
#	@$(LD) $(X86_64_LDFLAGS) -N -e KernelMain -Ttext 0x100000 -o $@.out $?
#	@echo + oc $@.out
#	@$(OC) -S -O binary $@.out $@

$(OBJDIR)/kernel-x86-32: $(KERN_X86_32_OBJFILES)
	@echo + ld $(KERN_X86_32_OBJFILES)
	@$(LD) $(X86_32_LDFLAGS) -T $(SRCDIR)/apockernel.ld -o $@.out $? -b binary 
	@echo + oc $@.out
	@$(OC) -S -O binary $@.out $@

$(OBJDIR)/kernel-x86-64: $(KERN_X86_64_OBJFILES)
	@echo + ld $(KERN_X86_64_OBJFILES)
	@$(LD) $(X86_64_LDFLAGS) -T $(SRCDIR)/apockernel.ld -o $@.out $? -b binary 
	@echo + oc $@.out
	@$(OC) -S -O binary $@.out $@
